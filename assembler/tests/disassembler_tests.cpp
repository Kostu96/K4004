#include "assembler/source/assembler.hpp"

#include <gtest/gtest.h>

struct DisassemblerTestParam {
    std::vector<std::uint8_t> byteCode;
    std::vector<std::string> refDisassembly;

    DisassemblerTestParam(std::initializer_list<std::uint8_t> inByteCode, std::initializer_list<std::string> inRefDisassembly) :
        byteCode(inByteCode),
        refDisassembly(inRefDisassembly) {}
};

struct DisassemblerTests : public testing::TestWithParam<DisassemblerTestParam> {
    Assembler assembler;
};

TEST_P(DisassemblerTests, givenProgramByteCodeWhenDisassemblingThenCorrectDisassemblyIsReturned) {
    auto& testParam = GetParam();
    
    std::vector<std::string> output;
    assembler.disassemble(testParam.byteCode, output);
    
    EXPECT_EQ(output.size(), testParam.refDisassembly.size());
    ASSERT_LE(output.size(), testParam.refDisassembly.size());

    for (size_t i = 0; i < output.size(); ++i)
        EXPECT_EQ(output[i], testParam.refDisassembly[i]) << "At byte " << i;
}

INSTANTIATE_TEST_SUITE_P(Parametrized, DisassemblerTests,
    testing::Values(
        DisassemblerTestParam({
            0xFE, 0xFF,
            0x20, 0xA2, 0xA0, 0x81, 0xB1, 0x40, 0x05
        },
        {
            "FIM P0, $A2", "",
            "LD R0",
            "ADD R1",
            "XCH R1",
            "JUN $005", ""
        }),
        DisassemblerTestParam({
            0xFE, 0xFF,
            0x28, 0x00, 0x29, 0xEA, 0xB0, 0x68, 0x29, 0xEA,
            0xB1, 0x50, 0x18, 0xB2, 0xE1, 0x40, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xF0, 0xB2, 0xD4, 0xB0, 0xF6, 0xB0, 0x1A, 0x2A,
            0xB1, 0xF6, 0xB1, 0xB2, 0xF6, 0xB2, 0xF8, 0x1C,
            0x1B, 0xC0, 0xB1, 0xF6, 0xB1, 0xF1, 0x40, 0x23
        },
        {
            "FIM P4, $00", "",
            "SRC P4",
            "RDR",
            "XCH R0",
            "INC R8",
            "SRC P4",
            "RDR",
            "XCH R1",
            "JMS $018", "",
            "XCH R2",
            "WMP",
            "JUN $000", "",
            "NOP", "NOP", "NOP", "NOP", "NOP", "NOP", "NOP", "NOP", "NOP",
            "CLB",
            "XCH R2",
            "LDM $4",
            "XCH R0",
            "RAR",
            "XCH R0",
            "JCN %1010, $2A", "",
            "XCH R1",
            "RAR",
            "XCH R1",
            "XCH R2",
            "RAR",
            "XCH R2",
            "DAC",
            "JCN %1100, $1B", "",
            "BBL $0",
            "XCH R1",
            "RAR",
            "XCH R1",
            "CLC",
            "JUN $023", ""
        }),
        DisassemblerTestParam({
            0xFE, 0xFF,
            0x20, 0x00, 0x22, 0x00, 0xDC, 0xB2, 0x21, 0xE0,
            0xF2, 0x71, 0x06, 0x60, 0x72, 0x06, 0x20, 0x00,
            0x22, 0x00, 0xDC, 0xB2, 0x21, 0xE4, 0xF2, 0xE5,
            0xF2, 0xE6, 0xF2, 0xE7, 0xF2, 0x60, 0x72, 0x14,
            0x40, 0x20
        },
        {
            "FIM P0, $00", "",
            "FIM P1, $00", "",
            "LDM $C",
            "XCH R2",
            "SRC P0",
            "WRM",
            "IAC",
            "ISZ R1, $06", "",
            "INC R0",
            "ISZ R2, $06", "",
            "FIM P0, $00", "",
            "FIM P1, $00", "",
            "LDM $C",
            "XCH R2",
            "SRC P0",
            "WR0",
            "IAC",
            "WR1",
            "IAC",
            "WR2",
            "IAC",
            "WR3",
            "IAC",
            "INC R0",
            "ISZ R2, $14", "",
            "JUN $020", ""
        }),
        DisassemblerTestParam({
            0xFE, 0xFF,
            0xE2, 0xCF, 0x2A, 0x41, 0x50, 0xDE, 0x50, 0xE5,
            0x20, 0xFE, 0x50, 0xEE, 0x50, 0xE5, 0x50, 0xEE,
            0x50, 0xE5, 0x2A, 0x42, 0x5F, 0xFF, 0x50, 0x1A,
            0x40, 0x24, 0x5F, 0xFF, 0x50, 0x20, 0x40, 0x18,
            0x5F, 0xFF, 0x4F, 0xFF, 0x22, 0xCB, 0xF0, 0x2B,
            0xE1, 0x21, 0xE0, 0xF2, 0x71, 0x29, 0xE4, 0xF2,
            0xE5, 0xF2, 0xE6, 0xF2, 0xE7, 0x60, 0x72, 0x29,
            0xFA, 0x50, 0xF7, 0x73, 0x39, 0x25, 0xFA, 0xF5,
            0xE1, 0x1A, 0x47, 0x1C, 0x4F, 0x19, 0x50, 0x12,
            0x50, 0x14, 0x52, 0x11, 0x43, 0x40, 0x45, 0xF0,
            0x40, 0x3F, 0x2C, 0x66, 0x2E, 0x59, 0x20, 0x00,
            0x3D, 0x21, 0x84, 0x85, 0xE0, 0xF6, 0x74, 0x59,
            0x75, 0x59, 0x50, 0xDE, 0x40, 0x75, 0x50, 0xDE,
            0x21, 0x94, 0x95, 0xE0, 0xF0, 0x74, 0x68, 0x75,
            0x68, 0xF0, 0x2B, 0xE1, 0x3F, 0xFA, 0x68, 0xA8,
            0xE0, 0xB9, 0xA9, 0xE2, 0xFB, 0xE0, 0x74, 0x75,
            0xF0, 0xF8, 0xE0, 0xFC, 0xE0, 0x74, 0x81, 0xF0,
            0xFB, 0xE0, 0xF2, 0x74, 0x88, 0xDF, 0xE0, 0xF7,
            0xE0, 0x1C, 0x8D, 0xF0, 0x2B, 0xE1, 0xDF, 0xF9,
            0xE0, 0xFA, 0xF9, 0xE0, 0xF3, 0xF6, 0xE0, 0x74,
            0x9C, 0x24, 0xC0, 0x21, 0xE9, 0x71, 0xA3, 0xEC,
            0xED, 0xEE, 0xEF, 0x60, 0x74, 0xA3, 0x20, 0x20,
            0x22, 0x30, 0x21, 0xE8, 0x61, 0x23, 0xE8, 0xE0,
            0x73, 0xB2, 0x20, 0x00, 0x20, 0x10, 0xF0, 0x2B,
            0xE1, 0x21, 0xEB, 0x61, 0x23, 0xEB, 0xE0, 0x73,
            0xC1, 0x2B, 0xEC, 0x14, 0xD7, 0xD8, 0x21, 0xE1,
            0xF0, 0x2B, 0xE4, 0x19, 0xD3, 0x40, 0x02, 0xF2,
            0xE4, 0xD2, 0x21, 0xE1, 0x40, 0x02, 0x2B, 0xAB,
            0xF1, 0xE1, 0xF5, 0xBB, 0xC0, 0x21, 0x23, 0x25,
            0x27, 0x29, 0x2B, 0x2D, 0x2F, 0xC0, 0x32, 0x34,
            0x36, 0x38, 0x3A, 0x3C, 0x3E, 0x30, 0xC0, 0xA4,
            0xF5, 0xFD, 0xB4, 0xEA, 0xC0, 0x00, 0xFF, 0x00
        },
        {
            "WRR",
            "BBL $F",
            "FIM P5, $41", "",
            "JMS $0DE", "",
            "JMS $0E5", "",
            "FIM P0, $FE", "",
            "JMS $0EE", "",
            "JMS $0E5", "",
            "JMS $0EE", "",
            "JMS $0E5", "",
            "FIM P5, $42", "",
            "JMS $FFF", "",
            "JMS $01A", "",
            "JUN $024", "",
            "JMS $FFF", "",
            "JMS $020", "",
            "JUN $018", "",
            "JMS $FFF", "",
            "JUN $FFF", "",
            "FIM P1, $CB", "",
            "CLB",
            "SRC P5",
            "WMP",
            "SRC P0",
            "WRM",
            "IAC",
            "ISZ R1, $29", "",
            "WR0",
            "IAC",
            "WR1",
            "IAC",
            "WR2",
            "IAC",
            "WR3",
            "INC R0",
            "ISZ R2, $29", "",
            "STC",
            "JMS $0F7", "",
            "ISZ R3, $39", "",
            "SRC P2",
            "STC",
            "RAL",
            "WMP",
            "JCN %1010, $47", "",
            "JCN %1100, $4F", "",
            "JCN %1001, $50", "",
            "JCN %0010, $50", "",
            "JCN %0100, $52", "",
            "JCN %0001, $43", "",
            "JUN $045", "",
            "CLB",
            "JUN $03F", "",
            "FIM P6, $66", "",
            "FIM P7, $59", "",
            "FIM P0, $00", "",
            "JIN P6",
            "SRC P0",
            "ADD R4",
            "ADD R5",
            "WRM",
            "RAR",
            "ISZ R4, $59", "",
            "ISZ R5, $59", "",
            "JMS $0DE", "",
            "JUN $075", "",
            "JMS $0DE", "",
            "SRC P0",
            "SUB R4",
            "SUB R5",
            "WRM",
            "CLB",
            "ISZ R4, $68", "",
            "ISZ R5, $68", "",
            "CLB",
            "SRC P5",
            "WMP",
            "JIN P7",
            "STC",
            "INC R8",
            "LD R8",
            "WRM",
            "XCH R9",
            "LD R9",
            "WRR",
            "DAA",
            "WRM",
            "ISZ R4, $75", "",
            "CLB",
            "DAC",
            "WRM",
            "KBP",
            "WRM",
            "ISZ R4, $81", "",
            "CLB",
            "DAA",
            "WRM",
            "IAC",
            "ISZ R4, $88", "",
            "LDM $F",
            "WRM",
            "TCC",
            "WRM",
            "JCN %1100, $8D", "",
            "CLB",
            "SRC P5",
            "WMP",
            "LDM $F",
            "TCS",
            "WRM",
            "STC",
            "TCS",
            "WRM",
            "CMC",
            "RAR",
            "WRM",
            "ISZ R4, $9C", "",
            "FIM P2, $C0", "",
            "SRC P0",
            "RDM",
            "ISZ R1, $A3", "",
            "RD0",
            "RD1",
            "RD2",
            "RD3",
            "INC R0",
            "ISZ R4, $A3", "",
            "FIM P0, $20", "",
            "FIM P1, $30", "",
            "SRC P0",
            "SBM",
            "INC R1",
            "SRC P1",
            "SBM",
            "WRM",
            "ISZ R3, $B2", "",
            "FIM P0, $00", "",
            "FIM P0, $10", "",
            "CLB",
            "SRC P5",
            "WMP",
            "SRC P0",
            "ADM",
            "INC R1",
            "SRC P1",
            "ADM",
            "WRM",
            "ISZ R3, $C1", "",
            "SRC P5",
            "RD0",
            "JCN %0100, $D7", "",
            "LDM $8",
            "SRC P0",
            "WMP",
            "CLB",
            "SRC P5",
            "WR0",
            "JCN %1001, $D3", "",
            "JUN $002", "",
            "IAC",
            "WR0",
            "LDM $2",
            "SRC P0",
            "WMP",
            "JUN $002", "",
            "SRC P5",
            "LD RB",
            "CLC",
            "WMP",
            "RAL",
            "XCH RB",
            "BBL $0",
            "SRC P0",
            "SRC P1",
            "SRC P2",
            "SRC P3",
            "SRC P4",
            "SRC P5",
            "SRC P6",
            "SRC P7",
            "BBL $0",
            "FIN P1",
            "FIN P2",
            "FIN P3",
            "FIN P4",
            "FIN P5",
            "FIN P6",
            "FIN P7",
            "FIN P0",
            "BBL $0",
            "LD R4",
            "RAL",
            "DCL",
            "XCH R4",
            "RDR",
            "BBL $0",
            "NOP",
            "???",
            "NOP"
        })
    )
);
