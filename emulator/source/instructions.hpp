#pragma once
#include <cstdint>

class RAM;
class ROM;

uint8_t getRegisterValue(const uint8_t* registers, uint8_t reg);
void setRegisterValue(uint8_t* registers, uint8_t reg, uint8_t value);

void NOP();
void HLT();
void BBS();
void LCR();
void OR4();
void OR5();
void AN6();
void AN7();
void DB0();
void DB1();
void SB0();
void SB1();
void EIN();
void DIN();
void RPM();
void JCN(uint16_t& PC, uint8_t IR, uint8_t acc, uint8_t CY, uint8_t test, const ROM& rom);
void FIM(uint16_t& PC, uint8_t* registers, uint8_t IR, const ROM& rom);
void SRC(RAM& ram, ROM& rom, const uint8_t* registers, uint8_t IR);
void FIN(uint8_t* registers, uint16_t PC, uint8_t IR, const ROM& rom);
void JIN(uint16_t& PC, const uint8_t* registers, uint8_t IR);
void JUN(uint16_t& PC, uint8_t IR, const ROM& rom);
void JMS(uint16_t& PC, uint16_t* stack, uint8_t& stackDepth, uint8_t IR, const ROM& rom);
void INC(uint8_t* registers, uint8_t IR);
void ISZ(uint16_t& PC, uint8_t* registers, uint8_t IR, const ROM& rom);
void ADD(uint8_t& acc, uint8_t& CY, const uint8_t* registers, uint8_t IR);
void SUB(uint8_t& acc, uint8_t& CY, const uint8_t* registers, uint8_t IR);
void LD(uint8_t& acc, const uint8_t* registers, uint8_t IR);
void XCH(uint8_t& acc, uint8_t* registers, uint8_t IR);
void BBL(uint16_t& PC, uint16_t* stack, uint8_t& stackDepth, uint8_t& acc, const uint8_t* registers, uint8_t IR);
void LDM(uint8_t& acc, uint8_t IR);
void WRM(RAM& ram, uint8_t acc);
void WMP(RAM& ram, uint8_t acc);
void WRR(ROM& rom, uint8_t acc);
void WPM();
void WR0(RAM& ram, uint8_t acc);
void WR1(RAM& ram, uint8_t acc);
void WR2(RAM& ram, uint8_t acc);
void WR3(RAM& ram, uint8_t acc);
void SBM(uint8_t& acc, uint8_t& CY, const RAM& ram);
void RDM(uint8_t& acc, const RAM& ram);
void RDR(uint8_t& acc, const ROM& rom);
void ADM(uint8_t& acc, uint8_t& CY, const RAM& ram);
void RD0(uint8_t& acc, const RAM& ram);
void RD1(uint8_t& acc, const RAM& ram);
void RD2(uint8_t& acc, const RAM& ram);
void RD3(uint8_t& acc, const RAM& ram);
void CLB(uint8_t& acc, uint8_t& CY);
void CLC(uint8_t& CY);
void IAC(uint8_t& acc, uint8_t& CY);
void CMC(uint8_t& CY);
void CMA(uint8_t& acc);
void RAL(uint8_t& acc, uint8_t& CY);
void RAR(uint8_t& acc, uint8_t& CY);
void TCC(uint8_t& acc, uint8_t& CY);
void DAC(uint8_t& acc, uint8_t& CY);
void TCS(uint8_t& acc, uint8_t& CY);
void STC(uint8_t& CY);
void DAA(uint8_t& acc, uint8_t& CY);
void KBP(uint8_t& acc);
void DCL(RAM& ram, uint8_t acc);
